@model FormEditor.Models.Form
@{
    Layout = "/Views/Shared/_Layout.cshtml";
}


    <div class="container">
        @using (Html.BeginForm("Index", "Home", FormMethod.Post))
        {
            <div class="col-md-10 offset-sm-2">
                <h3><label for="header-form">Редактирование формы</label></h3>
                <div class="col-md-7">
                    <div class="row form-group">
                        @Html.HiddenFor(o=>o.Id)
                        @Html.HiddenFor(o=>o.Guid)
                        @*<input type="text" aria-label="Large" name="Name" class="form-control" placeholder="Имя формы">*@
                        @Html.TextBoxFor(o => o.Name, new { @class = "form-control", placeholder = "Имя формы", name = "Name" })
                        @Html.ValidationMessageFor(o => o.Name, "", new { @style = "color:red" })
                    </div>
                    <div class="row form-group">
                        @Html.TextAreaFor(o => o.Description, new { @class = "form-control", name = "Description", rows = "1", placeholder = "Описание формы" })

                    </div>
                </div>
                <div class="col-md-9">
                    <div class="formContainer">
                        @for (int i = 0; i < Model.Blocks.Count; i++)
                        {
                            @Html.HiddenFor(o=>o.Id)
                            <div class="row form-group block">
                                <dirow class="card card-body border-dark">
                                    <div class="row form-group text-dark">
                                        <div class="col-md-5">
                                            @Html.TextBoxFor(o => o.Blocks[i].Header, new { @class = "form-control headerInput", type = "text", placeholder = "Заголовок поля", name = "Blocks[" + i + "].Header" })
                                            @Html.ValidationMessageFor(o => o.Blocks[i].Header, "", new { @style = "color:red" })
                                        </div>
                                        <div class="col-md-5 select">
                                            @Html.EnumDropDownListFor(o => o.Blocks[i].FieldsType, new { @class = "custom-select", name = "Blocks[" + i + "].FieldsType" })
                                        </div>
                                        <div class="col">
                                            <div class="d-flex justify-content-end">

                                                <a class="delete" href="#"><img src="/Content/images/icons8-delete-filled.svg"></a>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row form-group text-dark">
                                        <div class="col questEl">
                                            @if ((Model.Blocks[i].FieldsType) == FieldsType.TextString || (Model.Blocks[i].FieldsType) == FieldsType.Paragraph)
                                            {
                                                @Html.TextBoxFor(o => o.Blocks[i].TextField, new { @class = "form-control blockArea", name = "Blocks[" + i + "].TextField", rows = "2", type = "text" })
                                            }
                                            else
                                            {
                                                @Html.TextAreaFor(o => o.Blocks[i].TextField, new { @class = "form-control blockArea", name = "Blocks[" + i + "].TextField", rows = "2" })
                                            }
                                        </div>
                                    </div>
                                    <div class="row check-style justify-content-end">
                                        <div class="custom-control custom-checkbox">
                                            <label>
                                                @Html.CheckBoxFor(o => o.Blocks[i].Mandatory, new { @checked = "checked", @class = "checkboxMand", type = "checkbox", name = "Blocks[" + i + "].Mandatory" })
                                                Обязательный вопрос
                                            </label>
                                        </div>
                                    </div>
                                </dirow>
                            </div>
                        }
                    </div>
                    <div class="row form-group justify-content-end">
                        <a id="addField" href="#">+Добавить поле</a>
                    </div>
                    <div class="d-flex  justify-content-end">
                        <div class="row">
                            <button type="button" class="btn btn-style btn-danger justify-content-end">Закрыть</button>
                            <button type="submit" class="btn btn-style btn-success">Сохранить</button>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>

 